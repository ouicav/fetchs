const fetchs=(obj,interrupt,progress)=>{const abortController=new AbortController();const requestTime=(time,interrupt,abortController)=>{if(time){fetchs.setTime=setTimeout((time)=>{abortController.abort();},time);
}fetchs.breakRequest=()=>{if(time){clearTimeout(fetchs.setTime);}abortController.abort();};if(interrupt){
interrupt();}};const requestWay=(obj)=>{if(!obj.method){obj.method="get";}return obj;};const paramsFunction= (obj)=>{if(obj.params){obj.params.forEach((value,index,array)=>{obj.url=obj.url+"/"+value;});}return obj;};
const queryParameters=(obj)=>{if(obj.query){let sun=0;for(var k in obj.query){if(sun===0){obj.url=obj.url+"?" +k+"="+obj.query[k];sun+=1;}else{obj.url=obj.url+"&"+k+"="+obj.query[k];}}}return obj;};const requestBody=(bodys)=>{if(bodys){if(bodys.__proto__.constructor.name==="Object"&&!bodys.__proto__.get){let body=JSON.stringify(bodys);return body;}return bodys;}else{return bodys;}};const modes=(mode)=>{if(mode){return mode;} else{return "cors";}};const caches=(cache)=>{if(cache){return cache;}else{return "default";}};const credentiaiss=(credentiais)=>{if(credentiais){return credentiais;}else{return"same-origin";}};const integritys =(integrity)=>{if(integrity){return integrity;}else{return"";}};const keepalives=(keepalive)=>{if(keepalive){
return keepalive;}else{return false;}};const redirects=(redirect)=>{if(redirect){return redirect;}else{return "follow";}};const referrers=(referrer)=>{if(referrer){return referrer;}else{return "client/about:client";}
};const referrerPolicys=(referrerPolicy)=>{if(referrerPolicy){return referrerPolicy;}else{return "no-referrer-when-downgrade";}};const reques=(obj,abortController,body)=>{let request={};obj.method=obj.method.toLowerCase();if(obj.method==="get"&&body)return console.error("get请求不能携带请求体");if(obj.method==="get"||!body){request=new Request(obj.url,{method:obj.method,signal:abortController.signal,mode:`${modes(obj.mode)}`,cache:`${caches(obj.cache)}`,credentiais:`${credentiaiss(obj.credentiais)}`,integrity:`${integritys(obj.integrity)}`,keepalive:`${keepalives(obj.keepalive)}`,redirect:`${redirects(obj.redirect)}`,
referrer:`${referrers(obj.referrer)}`,referrerPolicy:`${referrerPolicys(obj.referrerPolicy)}`,});}else if (obj.method!=="get"&&body){request=new Request(obj.url,{method:obj.method,signal:abortController.signal,
body:body,mode:`${modes(obj.mode)}`,cache:`${caches(obj.cache)}`,credentiais:`${credentiaiss(obj.credentiais)}`,integrity:`${integritys(obj.integrity)}`,keepalive:`${keepalives(obj.keepalive)}`,redirect:`${redirects(obj.redirect)}`,referrer:`${referrers(obj.referrer)}`,referrerPolicy:`${referrerPolicys(obj.referrerPolicy)}`,
});}return request;};const header=(request,obj)=>{if(obj.body){if(obj.body.__proto__.constructor.name==="Object"&&!obj.body.__proto__.get){request.headers.set("Content-Type", "application/json");}
}if(obj.header){for(var k in obj.header){request.headers.set(k, obj.header[k]);}}};const theDefaultProcessing =(obj,abortController)=>{requestWay(obj);paramsFunction(obj);queryParameters(obj);const body=requestBody(obj.body);const request=reques(obj,abortController,body);header(request,obj);return request;};const requestBefore=async(ob, obs)=>{await obs.byIntercepting(ob);return ob;};const dataBooleans=async(datas,ob, obs)=>{if(obs.dataBoolean){repetitions(ob);await obs.dataBoolean(datas);}return datas;};const failureResponses=async(datas,ob,obs)=>{if(obs.failureResponse){repetitions(ob);await obs.failureResponse(datas);}return datas;};const repetitions=(ob)=>{if(ob.progress){delete ob.progress;}fetchs.repetition=async ()=>{const interruptRequestResult=await fetchs(ob);return interruptRequestResult;};};const requestFetch= (request,ob,obs,progress)=>{return new Promise((resolve, reject)=>{fetch(request).then(async(data)=>{
clearTimeout(fetchs.setTime);if(ob.progress&&progress){const reader=data.clone().body.getReader();let ff=0;
const secondaryStream=new ReadableStream({async start(controller){try{while(true){const{value,done}=await reader.read();ff+=value.length;if(data.headers.get("Content-Length")){const proportion=(ff/data.headers.get("Content-Length"))*100;progress(value,value.length, proportion);}else{progress(value,value.length,null);
}if(done){break;}controller.enqueue(value);}}finally{controller.close();reader.releaseLock();}},});data=new Response(secondaryStream);}let body=null;if(ob.format){if(ob.format==="json"){try{body=await data.clone().json();}catch(err){console.error("无法反序列化json类型的响应数据，请检查响应数据类型是否符合json规则，或修改转化数据类型配置"
);}}else if(ob.format==="text"){body=await data.clone().text();}else if(ob.format==="formdata"){body=await data.clone().formData();}else if(ob.format==="arraybuffer"){body=await data.clone().arrayBuffer();}else if (ob.format==="blob"){body=await data.clone().blob();}}else{try{body=await data.clone().json();}catch(err){
try {body=await data.clone().text();}catch(err){console.error("响应数据不是json数据类型或字符串，转化失败，请修改转化数据类型配置。");}}}let datas={body:body,};for(var k in data){if(k==="body"){datas["bodys"]=data[k];}
if(k==="url"||k==="type"||k==="status"||k==="ok"||k==="headers"||k==="redirected"||k==="statusText"){
datas[k]=data[k];}}if(data.ok&&!obj.url){datas=await dataBooleans(datas,ob,obs);resolve(datas.body);}else if (!data.ok&&!obj.url){datas=await failureResponses(datas,ob,obs);reject(datas);}else if(data.ok){resolve(datas.body);}else if(!data.ok){reject(datas);}},(err)=>{clearTimeout(fetchs.setTime);console.error(err);reject(undefined);});});};if(!obj.url){const obs=async(ob,interrupt,progress)=>{if(obj.baseUrl){ob.url=obj.baseUrl +ob.url;}if(obj.time&&!ob.time){ob.time=obj.time;}if(obj.method&&!ob.method){ob.method = obj.method;}if(obj.params&&!ob.params){ob.params=obj.params;}if(obj.query && !ob.query){ob.query=obj.query;}if(obj.body&&!ob.body){ob.body=obj.body;}if(obj.mode&&!ob.mode){ob.mode=obj.mode;}if(obj.cache&&!ob.cache){ob.cache=obj.cache;
}if(obj.credentiais&&!ob.credentiais){ob.credentiais = obj.credentiais;}if(obj.integrity && !ob.integrity){
ob.integrity=obj.integrity;}if(obj.keepalive&&!ob.keepalives){ob.keepalives=obj.keepalives;}if(obj.redirect&& !ob.redirects){ob.redirects=obj.redirects;}if(obj.referrers&&!ob.referrers){ob.referrers=obj.referrers;}
if(obj.format&&!ob.format){ob.format=obj.format;}if(obj.progress&&!ob.progress){ob.progress=obj.progress;}
let request=theDefaultProcessing(ob,abortController);if(obs.byIntercepting){for(var k in request){if(k==="url"||k==="method"||k==="body"||k==="cache"||k==="credentials"||k==="integrity"||k==="keepalive"||
k==="mode"||k==="redirect"||k==="referrer"||k==="referrerPolicy"){ob[k]=request[k];}}request={};await requestBefore(ob,obs);request=theDefaultProcessing(ob,abortController);}requestTime(ob.time,interrupt, abortController);return requestFetch(request,ob,obs,progress);};return obs;}else if(obj.url){let request=theDefaultProcessing(obj,abortController);requestTime(obj.time,interrupt,abortController);return requestFetch(request,obj,null,progress);}};export default fetchs;
